# Scalars represent leaves of a query. Except for the default ones (Int, Float, String, Boolean, ID), we can define our own.
scalar DateTime

type ImpairedUserDTO {
    # Non-nullable UUID.
    id: ID!
    """
    User's full name
    """
    name: String!
    """
    User's email address, also used as a username for users with an account
    """
    emailAddress: String!
}

input ImpairedUserInputDTO {
    """
    User's full name
    """
    name: String!
    """
    User's email address, also used as a username for users with an account
    """
    emailAddress: String!
}

type LocationDTO {
    longitude: Float!
    latitude: Float!
}

input LocationInputDTO {
    longitude: Float!
    latitude: Float!
}

type DamageDTO {
    id: ID!
    impaired: ImpairedUserDTO!
    timestamp: DateTime!
    location: LocationDTO!
    description: String!
    state: DamageStateEnum!
}

enum DamageStateEnum {
    STARTED
    PROCESSING
    APPROVED
    REJECTED
    CLOSED
}

type Query {
    greeting(name: String! = "Pavel"): String!
    """ Retrieves all damage currently stored in the system visible for the current user """
    retrieveDamage: [DamageDTO!]!
}

type Mutation {
    """ Creates a new damage report """
    createDamage(impaired: ImpairedUserInputDTO!, timestamp: DateTime!, location: LocationInputDTO!, description: String!): DamageDTO!
}
